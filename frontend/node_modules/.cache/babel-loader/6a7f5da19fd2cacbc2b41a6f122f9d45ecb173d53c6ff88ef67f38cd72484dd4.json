{"ast":null,"code":"var _jsxFileName = \"/run/media/crimxnhaze/new/CODE/DBMS-project/frontend/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { ThemeProvider, createTheme, styled } from '@mui/material/styles';\nimport { CssBaseline, AppBar, Toolbar, Typography, Button, Card, CardContent, TextField, Paper, IconButton, Drawer, List, ListItem, ListItemText, Switch, Box } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport io from 'socket.io-client';\n\n// Styled components for consistent theming\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1a1a1a' : theme.palette.background.paper,\n  width: 280,\n  marginRight: theme.spacing(2),\n  padding: theme.spacing(1),\n  height: 'fit-content'\n}));\n_c = StyledPaper;\nconst StyledCard = styled(Card)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#2a2a2a' : theme.palette.background.default,\n  marginBottom: theme.spacing(1),\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n  '&:hover': {\n    boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n  }\n}));\n_c2 = StyledCard;\nconst AddListPaper = styled(Paper)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1a1a1a' : theme.palette.background.paper,\n  width: 280,\n  padding: theme.spacing(1),\n  height: 'fit-content',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n}));\n\n// Initialize socket connection\n_c3 = AddListPaper;\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8000';\nconst socket = io(BACKEND_URL);\nfunction Board() {\n  _s();\n  // State management\n  const [darkMode, setDarkMode] = useState(false);\n  const [lists, setLists] = useState([]);\n  const [newListTitle, setNewListTitle] = useState('');\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  // Create theme based on dark mode state\n  const theme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light',\n      background: {\n        default: darkMode ? '#000' : '#f5f5f5',\n        paper: darkMode ? '#1a1a1a' : '#fff'\n      }\n    }\n  });\n\n  // Fetch initial board data and set up socket listeners\n  useEffect(() => {\n    fetchBoardData();\n    socket.on('updateBoard', updatedLists => {\n      setLists(updatedLists);\n    });\n    socket.on('newChatMessage', message => {\n      setChatMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Clean up socket listeners on component unmount\n    return () => {\n      socket.off('updateBoard');\n      socket.off('newChatMessage');\n    };\n  }, []);\n\n  // Fetch board data from the backend\n  const fetchBoardData = async () => {\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/board`);\n      if (response.ok) {\n        const data = await response.json();\n        setLists(data.lists);\n      }\n    } catch (error) {\n      console.error('Error fetching board data:', error);\n    }\n  };\n\n  // Handle drag and drop of lists and cards\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const updatedLists = [...lists];\n    if (result.type === 'LIST') {\n      // Reorder lists\n      const [movedList] = updatedLists.splice(source.index, 1);\n      updatedLists.splice(destination.index, 0, movedList);\n    } else {\n      // Move card between lists\n      const sourceList = updatedLists.find(list => list.list_id.toString() === source.droppableId);\n      const destList = updatedLists.find(list => list.list_id.toString() === destination.droppableId);\n      const [movedCard] = sourceList.cards.splice(source.index, 1);\n      destList.cards.splice(destination.index, 0, movedCard);\n    }\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n\n  // Update backend with new board state\n  const updateBackend = async updatedLists => {\n    try {\n      await fetch(`${BACKEND_URL}/api/board/update`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          lists: updatedLists\n        })\n      });\n      socket.emit('updateBoard', updatedLists);\n    } catch (error) {\n      console.error('Error updating board:', error);\n    }\n  };\n\n  // Add a new list\n  const addList = () => {\n    if (newListTitle.trim()) {\n      const newList = {\n        list_id: Date.now(),\n        title: newListTitle,\n        cards: []\n      };\n      setLists([...lists, newList]);\n      setNewListTitle('');\n      updateBackend([...lists, newList]);\n    }\n  };\n\n  // Handle Enter key press for adding a new list\n  const handleNewListKeyPress = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      addList();\n    }\n  };\n\n  // Add a new card to a list\n  const addCard = (listId, cardTitle) => {\n    if (cardTitle && cardTitle.trim()) {\n      const updatedLists = lists.map(list => {\n        if (list.list_id === listId) {\n          return {\n            ...list,\n            cards: [...list.cards, {\n              card_id: Date.now(),\n              title: cardTitle\n            }]\n          };\n        }\n        return list;\n      });\n      setLists(updatedLists);\n      updateBackend(updatedLists);\n    }\n  };\n\n  // Delete a list\n  const deleteList = listId => {\n    const updatedLists = lists.filter(list => list.list_id !== listId);\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n\n  // Delete a card from a list\n  const deleteCard = (listId, cardId) => {\n    const updatedLists = lists.map(list => {\n      if (list.list_id === listId) {\n        return {\n          ...list,\n          cards: list.cards.filter(card => card.card_id !== cardId)\n        };\n      }\n      return list;\n    });\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n\n  // Send a chat message\n  const sendChatMessage = e => {\n    e.preventDefault();\n    if (newMessage.trim()) {\n      const message = {\n        id: Date.now(),\n        text: newMessage,\n        user: 'User'\n      };\n      setChatMessages([...chatMessages, message]);\n      setNewMessage('');\n      socket.emit('newChatMessage', message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        backgroundColor: theme.palette.background.default\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        sx: {\n          backgroundColor: theme.palette.mode === 'dark' ? '#000' : theme.palette.primary.main\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flexGrow: 1\n            },\n            children: \"Project Alpha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              marginRight: 2\n            },\n            children: \"John Doe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: darkMode,\n            onChange: () => setDarkMode(!darkMode),\n            color: \"default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            onClick: () => setIsChatOpen(!isChatOpen),\n            children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"board\",\n          type: \"LIST\",\n          direction: \"horizontal\",\n          children: provided => /*#__PURE__*/_jsxDEV(Box, {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            sx: {\n              display: 'flex',\n              overflowX: 'auto',\n              padding: theme.spacing(3),\n              flexGrow: 1,\n              alignItems: 'flex-start'\n            },\n            children: [lists.map((list, listIndex) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: list.list_id.toString(),\n              index: listIndex,\n              children: provided => /*#__PURE__*/_jsxDEV(StyledPaper, {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    mb: 1\n                  },\n                  children: [list.title, /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: () => deleteList(list.list_id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: list.list_id.toString(),\n                  type: \"CARD\",\n                  children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Box, {\n                    ...provided.droppableProps,\n                    ref: provided.innerRef,\n                    sx: {\n                      minHeight: '50px',\n                      backgroundColor: snapshot.isDraggingOver ? theme.palette.action.hover : 'transparent',\n                      transition: 'background-color 0.2s ease',\n                      padding: theme.spacing(1, 0)\n                    },\n                    children: [list.cards.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: card.card_id.toString(),\n                      index: cardIndex,\n                      children: provided => /*#__PURE__*/_jsxDEV(StyledCard, {\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        children: /*#__PURE__*/_jsxDEV(CardContent, {\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            sx: {\n                              display: 'flex',\n                              justifyContent: 'space-between',\n                              alignItems: 'center'\n                            },\n                            children: [card.title, /*#__PURE__*/_jsxDEV(IconButton, {\n                              size: \"small\",\n                              onClick: () => deleteCard(list.list_id, card.card_id),\n                              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 282,\n                                columnNumber: 45\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 281,\n                              columnNumber: 43\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 279,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 278,\n                          columnNumber: 39\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 37\n                      }, this)\n                    }, card.card_id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 33\n                    }, this)), provided.placeholder]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  variant: \"outlined\",\n                  size: \"small\",\n                  placeholder: \"Enter card title...\",\n                  onKeyPress: e => {\n                    if (e.key === 'Enter') {\n                      e.preventDefault();\n                      addCard(list.list_id, e.target.value);\n                      e.target.value = '';\n                    }\n                  },\n                  sx: {\n                    marginTop: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this)\n            }, list.list_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)), provided.placeholder, /*#__PURE__*/_jsxDEV(AddListPaper, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                variant: \"outlined\",\n                size: \"small\",\n                placeholder: \"Enter list title...\",\n                value: newListTitle,\n                onChange: e => setNewListTitle(e.target.value),\n                onKeyPress: handleNewListKeyPress,\n                sx: {\n                  marginBottom: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 32\n                }, this),\n                onClick: addList,\n                variant: \"contained\",\n                fullWidth: true,\n                children: \"Add List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: \"right\",\n        open: isChatOpen,\n        onClose: () => setIsChatOpen(false),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 300,\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              flexGrow: 1,\n              overflowY: 'auto'\n            },\n            children: chatMessages.map(message => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: message.user,\n                secondary: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)\n            }, message.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: sendChatMessage,\n            style: {\n              padding: theme.spacing(2)\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              variant: \"outlined\",\n              placeholder: \"Type a message...\",\n              value: newMessage,\n              onChange: e => setNewMessage(e.target.value),\n              sx: {\n                marginBottom: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"3OCUNxr5PQaLhrIUoHcXPtzZBB0=\");\n_c4 = Board;\nexport default Board;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"StyledCard\");\n$RefreshReg$(_c3, \"AddListPaper\");\n$RefreshReg$(_c4, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","ThemeProvider","createTheme","styled","CssBaseline","AppBar","Toolbar","Typography","Button","Card","CardContent","TextField","Paper","IconButton","Drawer","List","ListItem","ListItemText","Switch","Box","AddIcon","DeleteIcon","ChatIcon","io","jsxDEV","_jsxDEV","StyledPaper","theme","backgroundColor","palette","mode","background","paper","width","marginRight","spacing","padding","height","_c","StyledCard","default","marginBottom","boxShadow","_c2","AddListPaper","display","flexDirection","alignItems","_c3","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","socket","Board","_s","darkMode","setDarkMode","lists","setLists","newListTitle","setNewListTitle","isChatOpen","setIsChatOpen","chatMessages","setChatMessages","newMessage","setNewMessage","fetchBoardData","on","updatedLists","message","prevMessages","off","response","fetch","ok","data","json","error","console","onDragEnd","result","source","destination","type","movedList","splice","index","sourceList","find","list","list_id","toString","droppableId","destList","movedCard","cards","updateBackend","method","headers","body","JSON","stringify","emit","addList","trim","newList","Date","now","title","handleNewListKeyPress","e","key","preventDefault","addCard","listId","cardTitle","map","card_id","deleteList","filter","deleteCard","cardId","card","sendChatMessage","id","text","user","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","sx","primary","main","variant","flexGrow","checked","onChange","color","onClick","direction","provided","ref","innerRef","droppableProps","overflowX","listIndex","draggableId","draggableProps","dragHandleProps","justifyContent","mb","size","snapshot","minHeight","isDraggingOver","action","hover","transition","cardIndex","placeholder","fullWidth","onKeyPress","target","value","marginTop","startIcon","anchor","open","onClose","overflowY","secondary","onSubmit","_c4","$RefreshReg$"],"sources":["/run/media/crimxnhaze/new/CODE/DBMS-project/frontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { ThemeProvider, createTheme, styled } from '@mui/material/styles';\nimport {\n  CssBaseline, AppBar, Toolbar, Typography, Button, Card, CardContent,\n  TextField, Paper, IconButton, Drawer, List, ListItem, ListItemText, Switch, Box\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport io from 'socket.io-client';\n\n// Styled components for consistent theming\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1a1a1a' : theme.palette.background.paper,\n  width: 280,\n  marginRight: theme.spacing(2),\n  padding: theme.spacing(1),\n  height: 'fit-content',\n}));\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#2a2a2a' : theme.palette.background.default,\n  marginBottom: theme.spacing(1),\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n  '&:hover': {\n    boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n  },\n}));\n\nconst AddListPaper = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1a1a1a' : theme.palette.background.paper,\n  width: 280,\n  padding: theme.spacing(1),\n  height: 'fit-content',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n}));\n\n// Initialize socket connection\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8000';\nconst socket = io(BACKEND_URL);\n\nfunction Board() {\n  // State management\n  const [darkMode, setDarkMode] = useState(false);\n  const [lists, setLists] = useState([]);\n  const [newListTitle, setNewListTitle] = useState('');\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  // Create theme based on dark mode state\n  const theme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light',\n      background: {\n        default: darkMode ? '#000' : '#f5f5f5',\n        paper: darkMode ? '#1a1a1a' : '#fff',\n      },\n    },\n  });\n\n  // Fetch initial board data and set up socket listeners\n  useEffect(() => {\n    fetchBoardData();\n\n    socket.on('updateBoard', (updatedLists) => {\n      setLists(updatedLists);\n    });\n\n    socket.on('newChatMessage', (message) => {\n      setChatMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    // Clean up socket listeners on component unmount\n    return () => {\n      socket.off('updateBoard');\n      socket.off('newChatMessage');\n    };\n  }, []);\n\n  // Fetch board data from the backend\n  const fetchBoardData = async () => {\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/board`);\n      if (response.ok) {\n        const data = await response.json();\n        setLists(data.lists);\n      }\n    } catch (error) {\n      console.error('Error fetching board data:', error);\n    }\n  };\n\n  // Handle drag and drop of lists and cards\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    const updatedLists = [...lists];\n\n    if (result.type === 'LIST') {\n      // Reorder lists\n      const [movedList] = updatedLists.splice(source.index, 1);\n      updatedLists.splice(destination.index, 0, movedList);\n    } else {\n      // Move card between lists\n      const sourceList = updatedLists.find(list => list.list_id.toString() === source.droppableId);\n      const destList = updatedLists.find(list => list.list_id.toString() === destination.droppableId);\n      const [movedCard] = sourceList.cards.splice(source.index, 1);\n      destList.cards.splice(destination.index, 0, movedCard);\n    }\n\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n\n  // Update backend with new board state\n  const updateBackend = async (updatedLists) => {\n    try {\n      await fetch(`${BACKEND_URL}/api/board/update`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ lists: updatedLists }),\n      });\n      socket.emit('updateBoard', updatedLists);\n    } catch (error) {\n      console.error('Error updating board:', error);\n    }\n  };\n\n  // Add a new list\n  const addList = () => {\n    if (newListTitle.trim()) {\n      const newList = {\n        list_id: Date.now(),\n        title: newListTitle,\n        cards: [],\n      };\n      setLists([...lists, newList]);\n      setNewListTitle('');\n      updateBackend([...lists, newList]);\n    }\n  };\n\n  // Handle Enter key press for adding a new list\n  const handleNewListKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      addList();\n    }\n  };\n\n  // Add a new card to a list\n  const addCard = (listId, cardTitle) => {\n    if (cardTitle && cardTitle.trim()) {\n      const updatedLists = lists.map(list => {\n        if (list.list_id === listId) {\n          return {\n            ...list,\n            cards: [...list.cards, { card_id: Date.now(), title: cardTitle }],\n          };\n        }\n        return list;\n      });\n      setLists(updatedLists);\n      updateBackend(updatedLists);\n    }\n  };\n\n  // Delete a list\n  const deleteList = (listId) => {\n    const updatedLists = lists.filter(list => list.list_id !== listId);\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n\n  // Delete a card from a list\n  const deleteCard = (listId, cardId) => {\n    const updatedLists = lists.map(list => {\n      if (list.list_id === listId) {\n        return {\n          ...list,\n          cards: list.cards.filter(card => card.card_id !== cardId),\n        };\n      }\n      return list;\n    });\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n\n  // Send a chat message\n  const sendChatMessage = (e) => {\n    e.preventDefault();\n    if (newMessage.trim()) {\n      const message = { id: Date.now(), text: newMessage, user: 'User' };\n      setChatMessages([...chatMessages, message]);\n      setNewMessage('');\n      socket.emit('newChatMessage', message);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div style={{ display: 'flex', flexDirection: 'column', height: '100vh', backgroundColor: theme.palette.background.default }}>\n        {/* App Bar */}\n        <AppBar position=\"static\" sx={{ backgroundColor: theme.palette.mode === 'dark' ? '#000' : theme.palette.primary.main }}>\n          <Toolbar>\n            <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>Project Alpha</Typography>\n            <Typography variant=\"subtitle1\" sx={{ marginRight: 2 }}>John Doe</Typography>\n            <Switch\n              checked={darkMode}\n              onChange={() => setDarkMode(!darkMode)}\n              color=\"default\"\n            />\n            <IconButton color=\"inherit\" onClick={() => setIsChatOpen(!isChatOpen)}>\n              <ChatIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        {/* Main Board Area */}\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"board\" type=\"LIST\" direction=\"horizontal\">\n            {(provided) => (\n              <Box\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                sx={{\n                  display: 'flex',\n                  overflowX: 'auto',\n                  padding: theme.spacing(3),\n                  flexGrow: 1,\n                  alignItems: 'flex-start',\n                }}\n              >\n                {/* Render Lists */}\n                {lists.map((list, listIndex) => (\n                  <Draggable key={list.list_id} draggableId={list.list_id.toString()} index={listIndex}>\n                    {(provided) => (\n                      <StyledPaper\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <Typography variant=\"h6\" sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n                          {list.title}\n                          <IconButton size=\"small\" onClick={() => deleteList(list.list_id)}>\n                            <DeleteIcon />\n                          </IconButton>\n                        </Typography>\n                        {/* Droppable area for cards */}\n                        <Droppable droppableId={list.list_id.toString()} type=\"CARD\">\n                          {(provided, snapshot) => (\n                            <Box\n                              {...provided.droppableProps} \n                              ref={provided.innerRef}\n                              sx={{\n                                minHeight: '50px',\n                                backgroundColor: snapshot.isDraggingOver ? theme.palette.action.hover : 'transparent',\n                                transition: 'background-color 0.2s ease',\n                                padding: theme.spacing(1, 0),\n                              }}\n                            >\n                              {/* Render Cards */}\n                              {list.cards.map((card, cardIndex) => (\n                                <Draggable key={card.card_id} draggableId={card.card_id.toString()} index={cardIndex}>\n                                  {(provided) => (\n                                    <StyledCard\n                                      ref={provided.innerRef}\n                                      {...provided.draggableProps}\n                                      {...provided.dragHandleProps}\n                                    >\n                                      <CardContent>\n                                        <Typography sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                          {card.title}\n                                          <IconButton size=\"small\" onClick={() => deleteCard(list.list_id, card.card_id)}>\n                                            <DeleteIcon />\n                                          </IconButton>\n                                        </Typography>\n                                      </CardContent>\n                                    </StyledCard>\n                                  )}\n                                </Draggable>\n                              ))}\n                              {provided.placeholder}\n                            </Box>\n                          )}\n                        </Droppable>\n                        <TextField\n                          fullWidth\n                          variant=\"outlined\"\n                          size=\"small\"\n                          placeholder=\"Enter card title...\"\n                          onKeyPress={(e) => {\n                            if (e.key === 'Enter') {\n                              e.preventDefault();\n                              addCard(list.list_id, e.target.value);\n                              e.target.value = '';\n                            }\n                          }}\n                          sx={{ marginTop: 1 }}\n                        />\n                      </StyledPaper>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n                \n                {/* Add New List */}\n                <AddListPaper>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    placeholder=\"Enter list title...\"\n                    value={newListTitle}\n                    onChange={(e) => setNewListTitle(e.target.value)}\n                    onKeyPress={handleNewListKeyPress}\n                    sx={{ marginBottom: 1 }}\n                  />\n                  <Button\n                    startIcon={<AddIcon />}\n                    onClick={addList}\n                    variant=\"contained\"\n                    fullWidth\n                  >\n                    Add List\n                  </Button>\n                </AddListPaper>\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        {/* Chat Drawer */}\n        <Drawer anchor=\"right\" open={isChatOpen} onClose={() => setIsChatOpen(false)}>\n          <Box sx={{ width: 300, height: '100%', display: 'flex', flexDirection: 'column' }}>\n            <List sx={{ flexGrow: 1, overflowY: 'auto' }}>\n              {chatMessages.map((message) => (\n                <ListItem key={message.id}>\n                  <ListItemText primary={message.user} secondary={message.text} />\n                </ListItem>\n              ))}\n            </List>\n            <form onSubmit={sendChatMessage} style={{ padding: theme.spacing(2) }}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"Type a message...\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                sx={{ marginBottom: 1 }}\n              />\n              <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n                Send\n              </Button>\n            </form>\n          </Box>\n        </Drawer>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default Board;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,SAASC,aAAa,EAAEC,WAAW,EAAEC,MAAM,QAAQ,sBAAsB;AACzE,SACEC,WAAW,EAAEC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,IAAI,EAAEC,WAAW,EACnEC,SAAS,EAAEC,KAAK,EAAEC,UAAU,EAAEC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,MAAM,EAAEC,GAAG,QAC1E,eAAe;AACtB,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,EAAE,MAAM,kBAAkB;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGvB,MAAM,CAACS,KAAK,CAAC,CAAC,CAAC;EAAEe;AAAM,CAAC,MAAM;EAChDC,eAAe,EAAED,KAAK,CAACE,OAAO,CAACC,IAAI,KAAK,MAAM,GAAG,SAAS,GAAGH,KAAK,CAACE,OAAO,CAACE,UAAU,CAACC,KAAK;EAC3FC,KAAK,EAAE,GAAG;EACVC,WAAW,EAAEP,KAAK,CAACQ,OAAO,CAAC,CAAC,CAAC;EAC7BC,OAAO,EAAET,KAAK,CAACQ,OAAO,CAAC,CAAC,CAAC;EACzBE,MAAM,EAAE;AACV,CAAC,CAAC,CAAC;AAACC,EAAA,GANEZ,WAAW;AAQjB,MAAMa,UAAU,GAAGpC,MAAM,CAACM,IAAI,CAAC,CAAC,CAAC;EAAEkB;AAAM,CAAC,MAAM;EAC9CC,eAAe,EAAED,KAAK,CAACE,OAAO,CAACC,IAAI,KAAK,MAAM,GAAG,SAAS,GAAGH,KAAK,CAACE,OAAO,CAACE,UAAU,CAACS,OAAO;EAC7FC,YAAY,EAAEd,KAAK,CAACQ,OAAO,CAAC,CAAC,CAAC;EAC9BO,SAAS,EAAE,2BAA2B;EACtC,SAAS,EAAE;IACTA,SAAS,EAAE;EACb;AACF,CAAC,CAAC,CAAC;AAACC,GAAA,GAPEJ,UAAU;AAShB,MAAMK,YAAY,GAAGzC,MAAM,CAACS,KAAK,CAAC,CAAC,CAAC;EAAEe;AAAM,CAAC,MAAM;EACjDC,eAAe,EAAED,KAAK,CAACE,OAAO,CAACC,IAAI,KAAK,MAAM,GAAG,SAAS,GAAGH,KAAK,CAACE,OAAO,CAACE,UAAU,CAACC,KAAK;EAC3FC,KAAK,EAAE,GAAG;EACVG,OAAO,EAAET,KAAK,CAACQ,OAAO,CAAC,CAAC,CAAC;EACzBE,MAAM,EAAE,aAAa;EACrBQ,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBC,UAAU,EAAE;AACd,CAAC,CAAC,CAAC;;AAEH;AAAAC,GAAA,GAVMJ,YAAY;AAWlB,MAAMK,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,uBAAuB;AAChF,MAAMC,MAAM,GAAG9B,EAAE,CAAC0B,WAAW,CAAC;AAE9B,SAASK,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC8D,KAAK,EAAEC,QAAQ,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgE,YAAY,EAAEC,eAAe,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkE,UAAU,EAAEC,aAAa,CAAC,GAAGnE,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACoE,YAAY,EAAEC,eAAe,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsE,UAAU,EAAEC,aAAa,CAAC,GAAGvE,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM+B,KAAK,GAAGzB,WAAW,CAAC;IACxB2B,OAAO,EAAE;MACPC,IAAI,EAAE0B,QAAQ,GAAG,MAAM,GAAG,OAAO;MACjCzB,UAAU,EAAE;QACVS,OAAO,EAAEgB,QAAQ,GAAG,MAAM,GAAG,SAAS;QACtCxB,KAAK,EAAEwB,QAAQ,GAAG,SAAS,GAAG;MAChC;IACF;EACF,CAAC,CAAC;;EAEF;EACA3D,SAAS,CAAC,MAAM;IACduE,cAAc,CAAC,CAAC;IAEhBf,MAAM,CAACgB,EAAE,CAAC,aAAa,EAAGC,YAAY,IAAK;MACzCX,QAAQ,CAACW,YAAY,CAAC;IACxB,CAAC,CAAC;IAEFjB,MAAM,CAACgB,EAAE,CAAC,gBAAgB,EAAGE,OAAO,IAAK;MACvCN,eAAe,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IAC/D,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXlB,MAAM,CAACoB,GAAG,CAAC,aAAa,CAAC;MACzBpB,MAAM,CAACoB,GAAG,CAAC,gBAAgB,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAML,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG1B,WAAW,YAAY,CAAC;MACxD,IAAIyB,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCnB,QAAQ,CAACkB,IAAI,CAACnB,KAAK,CAAC;MACtB;IACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;;EAED;EACA,MAAME,SAAS,GAAIC,MAAM,IAAK;IAC5B,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,MAAM;IACtC,IAAI,CAACE,WAAW,EAAE;IAElB,MAAMd,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAAC;IAE/B,IAAIwB,MAAM,CAACG,IAAI,KAAK,MAAM,EAAE;MAC1B;MACA,MAAM,CAACC,SAAS,CAAC,GAAGhB,YAAY,CAACiB,MAAM,CAACJ,MAAM,CAACK,KAAK,EAAE,CAAC,CAAC;MACxDlB,YAAY,CAACiB,MAAM,CAACH,WAAW,CAACI,KAAK,EAAE,CAAC,EAAEF,SAAS,CAAC;IACtD,CAAC,MAAM;MACL;MACA,MAAMG,UAAU,GAAGnB,YAAY,CAACoB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC,KAAKV,MAAM,CAACW,WAAW,CAAC;MAC5F,MAAMC,QAAQ,GAAGzB,YAAY,CAACoB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAC,KAAKT,WAAW,CAACU,WAAW,CAAC;MAC/F,MAAM,CAACE,SAAS,CAAC,GAAGP,UAAU,CAACQ,KAAK,CAACV,MAAM,CAACJ,MAAM,CAACK,KAAK,EAAE,CAAC,CAAC;MAC5DO,QAAQ,CAACE,KAAK,CAACV,MAAM,CAACH,WAAW,CAACI,KAAK,EAAE,CAAC,EAAEQ,SAAS,CAAC;IACxD;IAEArC,QAAQ,CAACW,YAAY,CAAC;IACtB4B,aAAa,CAAC5B,YAAY,CAAC;EAC7B,CAAC;;EAED;EACA,MAAM4B,aAAa,GAAG,MAAO5B,YAAY,IAAK;IAC5C,IAAI;MACF,MAAMK,KAAK,CAAC,GAAG1B,WAAW,mBAAmB,EAAE;QAC7CkD,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE7C,KAAK,EAAEY;QAAa,CAAC;MAC9C,CAAC,CAAC;MACFjB,MAAM,CAACmD,IAAI,CAAC,aAAa,EAAElC,YAAY,CAAC;IAC1C,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;;EAED;EACA,MAAM0B,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI7C,YAAY,CAAC8C,IAAI,CAAC,CAAC,EAAE;MACvB,MAAMC,OAAO,GAAG;QACdf,OAAO,EAAEgB,IAAI,CAACC,GAAG,CAAC,CAAC;QACnBC,KAAK,EAAElD,YAAY;QACnBqC,KAAK,EAAE;MACT,CAAC;MACDtC,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEiD,OAAO,CAAC,CAAC;MAC7B9C,eAAe,CAAC,EAAE,CAAC;MACnBqC,aAAa,CAAC,CAAC,GAAGxC,KAAK,EAAEiD,OAAO,CAAC,CAAC;IACpC;EACF,CAAC;;EAED;EACA,MAAMI,qBAAqB,GAAIC,CAAC,IAAK;IACnC,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBD,CAAC,CAACE,cAAc,CAAC,CAAC;MAClBT,OAAO,CAAC,CAAC;IACX;EACF,CAAC;;EAED;EACA,MAAMU,OAAO,GAAGA,CAACC,MAAM,EAAEC,SAAS,KAAK;IACrC,IAAIA,SAAS,IAAIA,SAAS,CAACX,IAAI,CAAC,CAAC,EAAE;MACjC,MAAMpC,YAAY,GAAGZ,KAAK,CAAC4D,GAAG,CAAC3B,IAAI,IAAI;QACrC,IAAIA,IAAI,CAACC,OAAO,KAAKwB,MAAM,EAAE;UAC3B,OAAO;YACL,GAAGzB,IAAI;YACPM,KAAK,EAAE,CAAC,GAAGN,IAAI,CAACM,KAAK,EAAE;cAAEsB,OAAO,EAAEX,IAAI,CAACC,GAAG,CAAC,CAAC;cAAEC,KAAK,EAAEO;YAAU,CAAC;UAClE,CAAC;QACH;QACA,OAAO1B,IAAI;MACb,CAAC,CAAC;MACFhC,QAAQ,CAACW,YAAY,CAAC;MACtB4B,aAAa,CAAC5B,YAAY,CAAC;IAC7B;EACF,CAAC;;EAED;EACA,MAAMkD,UAAU,GAAIJ,MAAM,IAAK;IAC7B,MAAM9C,YAAY,GAAGZ,KAAK,CAAC+D,MAAM,CAAC9B,IAAI,IAAIA,IAAI,CAACC,OAAO,KAAKwB,MAAM,CAAC;IAClEzD,QAAQ,CAACW,YAAY,CAAC;IACtB4B,aAAa,CAAC5B,YAAY,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMoD,UAAU,GAAGA,CAACN,MAAM,EAAEO,MAAM,KAAK;IACrC,MAAMrD,YAAY,GAAGZ,KAAK,CAAC4D,GAAG,CAAC3B,IAAI,IAAI;MACrC,IAAIA,IAAI,CAACC,OAAO,KAAKwB,MAAM,EAAE;QAC3B,OAAO;UACL,GAAGzB,IAAI;UACPM,KAAK,EAAEN,IAAI,CAACM,KAAK,CAACwB,MAAM,CAACG,IAAI,IAAIA,IAAI,CAACL,OAAO,KAAKI,MAAM;QAC1D,CAAC;MACH;MACA,OAAOhC,IAAI;IACb,CAAC,CAAC;IACFhC,QAAQ,CAACW,YAAY,CAAC;IACtB4B,aAAa,CAAC5B,YAAY,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMuD,eAAe,GAAIb,CAAC,IAAK;IAC7BA,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB,IAAIhD,UAAU,CAACwC,IAAI,CAAC,CAAC,EAAE;MACrB,MAAMnC,OAAO,GAAG;QAAEuD,EAAE,EAAElB,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEkB,IAAI,EAAE7D,UAAU;QAAE8D,IAAI,EAAE;MAAO,CAAC;MAClE/D,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEO,OAAO,CAAC,CAAC;MAC3CJ,aAAa,CAAC,EAAE,CAAC;MACjBd,MAAM,CAACmD,IAAI,CAAC,gBAAgB,EAAEjC,OAAO,CAAC;IACxC;EACF,CAAC;EAED,oBACE9C,OAAA,CAACxB,aAAa;IAAC0B,KAAK,EAAEA,KAAM;IAAAsG,QAAA,gBAC1BxG,OAAA,CAACrB,WAAW;MAAA8H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACf5G,OAAA;MAAK6G,KAAK,EAAE;QAAEzF,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAET,MAAM,EAAE,OAAO;QAAET,eAAe,EAAED,KAAK,CAACE,OAAO,CAACE,UAAU,CAACS;MAAQ,CAAE;MAAAyF,QAAA,gBAE3HxG,OAAA,CAACpB,MAAM;QAACkI,QAAQ,EAAC,QAAQ;QAACC,EAAE,EAAE;UAAE5G,eAAe,EAAED,KAAK,CAACE,OAAO,CAACC,IAAI,KAAK,MAAM,GAAG,MAAM,GAAGH,KAAK,CAACE,OAAO,CAAC4G,OAAO,CAACC;QAAK,CAAE;QAAAT,QAAA,eACrHxG,OAAA,CAACnB,OAAO;UAAA2H,QAAA,gBACNxG,OAAA,CAAClB,UAAU;YAACoI,OAAO,EAAC,IAAI;YAACH,EAAE,EAAE;cAAEI,QAAQ,EAAE;YAAE,CAAE;YAAAX,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACxE5G,OAAA,CAAClB,UAAU;YAACoI,OAAO,EAAC,WAAW;YAACH,EAAE,EAAE;cAAEtG,WAAW,EAAE;YAAE,CAAE;YAAA+F,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC7E5G,OAAA,CAACP,MAAM;YACL2H,OAAO,EAAErF,QAAS;YAClBsF,QAAQ,EAAEA,CAAA,KAAMrF,WAAW,CAAC,CAACD,QAAQ,CAAE;YACvCuF,KAAK,EAAC;UAAS;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACF5G,OAAA,CAACZ,UAAU;YAACkI,KAAK,EAAC,SAAS;YAACC,OAAO,EAAEA,CAAA,KAAMjF,aAAa,CAAC,CAACD,UAAU,CAAE;YAAAmE,QAAA,eACpExG,OAAA,CAACH,QAAQ;cAAA4G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGT5G,OAAA,CAAC3B,eAAe;QAACmF,SAAS,EAAEA,SAAU;QAAAgD,QAAA,eACpCxG,OAAA,CAAC1B,SAAS;UAAC+F,WAAW,EAAC,OAAO;UAACT,IAAI,EAAC,MAAM;UAAC4D,SAAS,EAAC,YAAY;UAAAhB,QAAA,EAC7DiB,QAAQ,iBACRzH,OAAA,CAACN,GAAG;YACFgI,GAAG,EAAED,QAAQ,CAACE,QAAS;YAAA,GACnBF,QAAQ,CAACG,cAAc;YAC3Bb,EAAE,EAAE;cACF3F,OAAO,EAAE,MAAM;cACfyG,SAAS,EAAE,MAAM;cACjBlH,OAAO,EAAET,KAAK,CAACQ,OAAO,CAAC,CAAC,CAAC;cACzByG,QAAQ,EAAE,CAAC;cACX7F,UAAU,EAAE;YACd,CAAE;YAAAkF,QAAA,GAGDvE,KAAK,CAAC4D,GAAG,CAAC,CAAC3B,IAAI,EAAE4D,SAAS,kBACzB9H,OAAA,CAACzB,SAAS;cAAoBwJ,WAAW,EAAE7D,IAAI,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAE;cAACL,KAAK,EAAE+D,SAAU;cAAAtB,QAAA,EACjFiB,QAAQ,iBACRzH,OAAA,CAACC,WAAW;gBACVyH,GAAG,EAAED,QAAQ,CAACE,QAAS;gBAAA,GACnBF,QAAQ,CAACO,cAAc;gBAAA,GACvBP,QAAQ,CAACQ,eAAe;gBAAAzB,QAAA,gBAE5BxG,OAAA,CAAClB,UAAU;kBAACoI,OAAO,EAAC,IAAI;kBAACH,EAAE,EAAE;oBAAE3F,OAAO,EAAE,MAAM;oBAAE8G,cAAc,EAAE,eAAe;oBAAE5G,UAAU,EAAE,QAAQ;oBAAE6G,EAAE,EAAE;kBAAE,CAAE;kBAAA3B,QAAA,GAC5GtC,IAAI,CAACmB,KAAK,eACXrF,OAAA,CAACZ,UAAU;oBAACgJ,IAAI,EAAC,OAAO;oBAACb,OAAO,EAAEA,CAAA,KAAMxB,UAAU,CAAC7B,IAAI,CAACC,OAAO,CAAE;oBAAAqC,QAAA,eAC/DxG,OAAA,CAACJ,UAAU;sBAAA6G,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eAEb5G,OAAA,CAAC1B,SAAS;kBAAC+F,WAAW,EAAEH,IAAI,CAACC,OAAO,CAACC,QAAQ,CAAC,CAAE;kBAACR,IAAI,EAAC,MAAM;kBAAA4C,QAAA,EACzDA,CAACiB,QAAQ,EAAEY,QAAQ,kBAClBrI,OAAA,CAACN,GAAG;oBAAA,GACE+H,QAAQ,CAACG,cAAc;oBAC3BF,GAAG,EAAED,QAAQ,CAACE,QAAS;oBACvBZ,EAAE,EAAE;sBACFuB,SAAS,EAAE,MAAM;sBACjBnI,eAAe,EAAEkI,QAAQ,CAACE,cAAc,GAAGrI,KAAK,CAACE,OAAO,CAACoI,MAAM,CAACC,KAAK,GAAG,aAAa;sBACrFC,UAAU,EAAE,4BAA4B;sBACxC/H,OAAO,EAAET,KAAK,CAACQ,OAAO,CAAC,CAAC,EAAE,CAAC;oBAC7B,CAAE;oBAAA8F,QAAA,GAGDtC,IAAI,CAACM,KAAK,CAACqB,GAAG,CAAC,CAACM,IAAI,EAAEwC,SAAS,kBAC9B3I,OAAA,CAACzB,SAAS;sBAAoBwJ,WAAW,EAAE5B,IAAI,CAACL,OAAO,CAAC1B,QAAQ,CAAC,CAAE;sBAACL,KAAK,EAAE4E,SAAU;sBAAAnC,QAAA,EACjFiB,QAAQ,iBACRzH,OAAA,CAACc,UAAU;wBACT4G,GAAG,EAAED,QAAQ,CAACE,QAAS;wBAAA,GACnBF,QAAQ,CAACO,cAAc;wBAAA,GACvBP,QAAQ,CAACQ,eAAe;wBAAAzB,QAAA,eAE5BxG,OAAA,CAACf,WAAW;0BAAAuH,QAAA,eACVxG,OAAA,CAAClB,UAAU;4BAACiI,EAAE,EAAE;8BAAE3F,OAAO,EAAE,MAAM;8BAAE8G,cAAc,EAAE,eAAe;8BAAE5G,UAAU,EAAE;4BAAS,CAAE;4BAAAkF,QAAA,GACxFL,IAAI,CAACd,KAAK,eACXrF,OAAA,CAACZ,UAAU;8BAACgJ,IAAI,EAAC,OAAO;8BAACb,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAAC/B,IAAI,CAACC,OAAO,EAAEgC,IAAI,CAACL,OAAO,CAAE;8BAAAU,QAAA,eAC7ExG,OAAA,CAACJ,UAAU;gCAAA6G,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OAAE;4BAAC;8BAAAH,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACJ,CAAC;0BAAA;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACH;wBAAC;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACF;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACJ;oBACb,GAhBaT,IAAI,CAACL,OAAO;sBAAAW,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAiBjB,CACZ,CAAC,EACDa,QAAQ,CAACmB,WAAW;kBAAA;oBAAAnC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClB;gBACN;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACQ,CAAC,eACZ5G,OAAA,CAACd,SAAS;kBACR2J,SAAS;kBACT3B,OAAO,EAAC,UAAU;kBAClBkB,IAAI,EAAC,OAAO;kBACZQ,WAAW,EAAC,qBAAqB;kBACjCE,UAAU,EAAGvD,CAAC,IAAK;oBACjB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;sBACrBD,CAAC,CAACE,cAAc,CAAC,CAAC;sBAClBC,OAAO,CAACxB,IAAI,CAACC,OAAO,EAAEoB,CAAC,CAACwD,MAAM,CAACC,KAAK,CAAC;sBACrCzD,CAAC,CAACwD,MAAM,CAACC,KAAK,GAAG,EAAE;oBACrB;kBACF,CAAE;kBACFjC,EAAE,EAAE;oBAAEkC,SAAS,EAAE;kBAAE;gBAAE;kBAAAxC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACS;YACd,GAlEa1C,IAAI,CAACC,OAAO;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAmEjB,CACZ,CAAC,EACDa,QAAQ,CAACmB,WAAW,eAGrB5I,OAAA,CAACmB,YAAY;cAAAqF,QAAA,gBACXxG,OAAA,CAACd,SAAS;gBACR2J,SAAS;gBACT3B,OAAO,EAAC,UAAU;gBAClBkB,IAAI,EAAC,OAAO;gBACZQ,WAAW,EAAC,qBAAqB;gBACjCI,KAAK,EAAE7G,YAAa;gBACpBkF,QAAQ,EAAG9B,CAAC,IAAKnD,eAAe,CAACmD,CAAC,CAACwD,MAAM,CAACC,KAAK,CAAE;gBACjDF,UAAU,EAAExD,qBAAsB;gBAClCyB,EAAE,EAAE;kBAAE/F,YAAY,EAAE;gBAAE;cAAE;gBAAAyF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,eACF5G,OAAA,CAACjB,MAAM;gBACLmK,SAAS,eAAElJ,OAAA,CAACL,OAAO;kBAAA8G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBACvBW,OAAO,EAAEvC,OAAQ;gBACjBkC,OAAO,EAAC,WAAW;gBACnB2B,SAAS;gBAAArC,QAAA,EACV;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAGlB5G,OAAA,CAACX,MAAM;QAAC8J,MAAM,EAAC,OAAO;QAACC,IAAI,EAAE/G,UAAW;QAACgH,OAAO,EAAEA,CAAA,KAAM/G,aAAa,CAAC,KAAK,CAAE;QAAAkE,QAAA,eAC3ExG,OAAA,CAACN,GAAG;UAACqH,EAAE,EAAE;YAAEvG,KAAK,EAAE,GAAG;YAAEI,MAAM,EAAE,MAAM;YAAEQ,OAAO,EAAE,MAAM;YAAEC,aAAa,EAAE;UAAS,CAAE;UAAAmF,QAAA,gBAChFxG,OAAA,CAACV,IAAI;YAACyH,EAAE,EAAE;cAAEI,QAAQ,EAAE,CAAC;cAAEmC,SAAS,EAAE;YAAO,CAAE;YAAA9C,QAAA,EAC1CjE,YAAY,CAACsD,GAAG,CAAE/C,OAAO,iBACxB9C,OAAA,CAACT,QAAQ;cAAAiH,QAAA,eACPxG,OAAA,CAACR,YAAY;gBAACwH,OAAO,EAAElE,OAAO,CAACyD,IAAK;gBAACgD,SAAS,EAAEzG,OAAO,CAACwD;cAAK;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GADnD9D,OAAO,CAACuD,EAAE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEf,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACP5G,OAAA;YAAMwJ,QAAQ,EAAEpD,eAAgB;YAACS,KAAK,EAAE;cAAElG,OAAO,EAAET,KAAK,CAACQ,OAAO,CAAC,CAAC;YAAE,CAAE;YAAA8F,QAAA,gBACpExG,OAAA,CAACd,SAAS;cACR2J,SAAS;cACT3B,OAAO,EAAC,UAAU;cAClB0B,WAAW,EAAC,mBAAmB;cAC/BI,KAAK,EAAEvG,UAAW;cAClB4E,QAAQ,EAAG9B,CAAC,IAAK7C,aAAa,CAAC6C,CAAC,CAACwD,MAAM,CAACC,KAAK,CAAE;cAC/CjC,EAAE,EAAE;gBAAE/F,YAAY,EAAE;cAAE;YAAE;cAAAyF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACF5G,OAAA,CAACjB,MAAM;cAAC6E,IAAI,EAAC,QAAQ;cAACiF,SAAS;cAAC3B,OAAO,EAAC,WAAW;cAACI,KAAK,EAAC,SAAS;cAAAd,QAAA,EAAC;YAEpE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB;AAAC9E,EAAA,CAnUQD,KAAK;AAAA4H,GAAA,GAAL5H,KAAK;AAqUd,eAAeA,KAAK;AAAC,IAAAhB,EAAA,EAAAK,GAAA,EAAAK,GAAA,EAAAkI,GAAA;AAAAC,YAAA,CAAA7I,EAAA;AAAA6I,YAAA,CAAAxI,GAAA;AAAAwI,YAAA,CAAAnI,GAAA;AAAAmI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}