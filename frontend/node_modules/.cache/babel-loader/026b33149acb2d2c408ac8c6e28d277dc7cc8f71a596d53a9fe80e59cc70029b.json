{"ast":null,"code":"var _jsxFileName = \"/run/media/crimxnhaze/new/CODE/DBMS-project/frontend/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { ThemeProvider, createTheme, styled } from '@mui/material/styles';\nimport { CssBaseline, AppBar, Toolbar, Typography, Button, Card, CardContent, TextField, Paper, IconButton, Drawer, List, ListItem, ListItemText, Switch } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1a1a1a' : theme.palette.background.paper\n}));\n_c = StyledPaper;\nconst StyledCard = styled(Card)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#2a2a2a' : theme.palette.background.default\n}));\n_c2 = StyledCard;\nconst socket = io('http://localhost:8000');\nfunction Board() {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const theme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light',\n      background: {\n        default: darkMode ? '#000' : '#f5f5f5',\n        paper: darkMode ? '#1a1a1a' : '#fff'\n      }\n    }\n  });\n  const [lists, setLists] = useState([]);\n  const [newListTitle, setNewListTitle] = useState('');\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    fetchBoardData();\n    socket.on('updateBoard', updatedLists => {\n      setLists(updatedLists);\n    });\n    socket.on('newChatMessage', message => {\n      setChatMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      socket.off('updateBoard');\n      socket.off('newChatMessage');\n    };\n  }, []);\n  const fetchBoardData = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/board');\n      if (response.ok) {\n        const data = await response.json();\n        setLists(data.lists);\n      }\n    } catch (error) {\n      console.error('Error fetching board data:', error);\n    }\n  };\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const updatedLists = [...lists];\n    if (result.type === 'LIST') {\n      const [movedList] = updatedLists.splice(source.index, 1);\n      updatedLists.splice(destination.index, 0, movedList);\n    } else {\n      const sourceList = updatedLists.find(list => list.list_id.toString() === source.droppableId);\n      const destList = updatedLists.find(list => list.list_id.toString() === destination.droppableId);\n      const [movedCard] = sourceList.cards.splice(source.index, 1);\n      destList.cards.splice(destination.index, 0, movedCard);\n    }\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n  const updateBackend = async updatedLists => {\n    try {\n      await fetch('http://localhost:8000/api/board/update', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          lists: updatedLists\n        })\n      });\n      socket.emit('updateBoard', updatedLists);\n    } catch (error) {\n      console.error('Error updating board:', error);\n    }\n  };\n  const addList = () => {\n    if (newListTitle.trim()) {\n      const newList = {\n        list_id: Date.now(),\n        title: newListTitle,\n        cards: []\n      };\n      setLists([...lists, newList]);\n      setNewListTitle('');\n      updateBackend([...lists, newList]);\n    }\n  };\n  const addCard = listId => {\n    const newCardTitle = prompt('Enter card title:');\n    if (newCardTitle && newCardTitle.trim()) {\n      const updatedLists = lists.map(list => {\n        if (list.list_id === listId) {\n          return {\n            ...list,\n            cards: [...list.cards, {\n              card_id: Date.now(),\n              title: newCardTitle\n            }]\n          };\n        }\n        return list;\n      });\n      setLists(updatedLists);\n      updateBackend(updatedLists);\n    }\n  };\n  const deleteList = listId => {\n    const updatedLists = lists.filter(list => list.list_id !== listId);\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n  const deleteCard = (listId, cardId) => {\n    const updatedLists = lists.map(list => {\n      if (list.list_id === listId) {\n        return {\n          ...list,\n          cards: list.cards.filter(card => card.card_id !== cardId)\n        };\n      }\n      return list;\n    });\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n  const sendChatMessage = e => {\n    e.preventDefault();\n    if (newMessage.trim()) {\n      const message = {\n        id: Date.now(),\n        text: newMessage,\n        user: 'User'\n      };\n      setChatMessages([...chatMessages, message]);\n      setNewMessage('');\n      socket.emit('newChatMessage', message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        backgroundColor: theme.palette.background.default\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        sx: {\n          backgroundColor: theme.palette.mode === 'dark' ? '#000' : theme.palette.primary.main\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flexGrow: 1\n            },\n            children: \"Project Alpha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              marginRight: 2\n            },\n            children: \"John Doe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: darkMode,\n            onChange: () => setDarkMode(!darkMode),\n            color: \"default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            onClick: () => setIsChatOpen(!isChatOpen),\n            children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"board\",\n          type: \"LIST\",\n          direction: \"horizontal\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            style: {\n              display: 'flex',\n              overflowX: 'auto',\n              padding: theme.spacing(3),\n              flexGrow: 1\n            },\n            children: [lists.map((list, listIndex) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: list.list_id.toString(),\n              index: listIndex,\n              children: provided => /*#__PURE__*/_jsxDEV(StyledPaper, {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                sx: {\n                  width: 280,\n                  marginRight: 2,\n                  padding: 1,\n                  height: 'fit-content'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: [list.title, /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: () => deleteList(list.list_id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: list.list_id.toString(),\n                  type: \"CARD\",\n                  children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ...provided.droppableProps,\n                    ref: provided.innerRef,\n                    style: {\n                      minHeight: '50px',\n                      // Ensure there's always space to drop\n                      backgroundColor: snapshot.isDraggingOver ? theme.palette.action.hover : 'transparent',\n                      transition: 'background-color 0.2s ease',\n                      padding: theme.spacing(1, 0)\n                    },\n                    children: [list.cards.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: card.card_id.toString(),\n                      index: cardIndex,\n                      children: provided => /*#__PURE__*/_jsxDEV(StyledCard, {\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        sx: {\n                          marginBottom: 1\n                        },\n                        children: /*#__PURE__*/_jsxDEV(CardContent, {\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            children: [card.title, /*#__PURE__*/_jsxDEV(IconButton, {\n                              size: \"small\",\n                              onClick: () => deleteCard(list.list_id, card.card_id),\n                              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 226,\n                                columnNumber: 45\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 225,\n                              columnNumber: 43\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 223,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 222,\n                          columnNumber: 39\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 37\n                      }, this)\n                    }, card.card_id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 33\n                    }, this)), provided.placeholder]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 38\n                  }, this),\n                  onClick: () => addCard(list.list_id),\n                  sx: {\n                    width: '100%',\n                    justifyContent: 'flex-start',\n                    textTransform: 'none'\n                  },\n                  children: \"Add Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 23\n              }, this)\n            }, list.list_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)), provided.placeholder, /*#__PURE__*/_jsxDEV(StyledPaper, {\n              sx: {\n                width: 280,\n                padding: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                variant: \"outlined\",\n                placeholder: \"Enter list title...\",\n                value: newListTitle,\n                onChange: e => setNewListTitle(e.target.value),\n                sx: {\n                  marginBottom: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 32\n                }, this),\n                onClick: addList,\n                sx: {\n                  width: '100%',\n                  justifyContent: 'flex-start',\n                  textTransform: 'none'\n                },\n                children: \"Add List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: \"right\",\n        open: isChatOpen,\n        onClose: () => setIsChatOpen(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 300,\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              flexGrow: 1,\n              overflowY: 'auto'\n            },\n            children: chatMessages.map(message => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: message.user,\n                secondary: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)\n            }, message.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: sendChatMessage,\n            style: {\n              padding: theme.spacing(2)\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              variant: \"outlined\",\n              placeholder: \"Type a message...\",\n              value: newMessage,\n              onChange: e => setNewMessage(e.target.value),\n              sx: {\n                marginBottom: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"3OCUNxr5PQaLhrIUoHcXPtzZBB0=\");\n_c3 = Board;\nexport default Board;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"StyledCard\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","ThemeProvider","createTheme","styled","CssBaseline","AppBar","Toolbar","Typography","Button","Card","CardContent","TextField","Paper","IconButton","Drawer","List","ListItem","ListItemText","Switch","AddIcon","DeleteIcon","ChatIcon","io","jsxDEV","_jsxDEV","StyledPaper","theme","backgroundColor","palette","mode","background","paper","_c","StyledCard","default","_c2","socket","Board","_s","darkMode","setDarkMode","lists","setLists","newListTitle","setNewListTitle","isChatOpen","setIsChatOpen","chatMessages","setChatMessages","newMessage","setNewMessage","fetchBoardData","on","updatedLists","message","prevMessages","off","response","fetch","ok","data","json","error","console","onDragEnd","result","source","destination","type","movedList","splice","index","sourceList","find","list","list_id","toString","droppableId","destList","movedCard","cards","updateBackend","method","headers","body","JSON","stringify","emit","addList","trim","newList","Date","now","title","addCard","listId","newCardTitle","prompt","map","card_id","deleteList","filter","deleteCard","cardId","card","sendChatMessage","e","preventDefault","id","text","user","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","height","position","sx","primary","main","variant","flexGrow","marginRight","checked","onChange","color","onClick","direction","provided","ref","innerRef","droppableProps","overflowX","padding","spacing","listIndex","draggableId","draggableProps","dragHandleProps","width","size","snapshot","minHeight","isDraggingOver","action","hover","transition","cardIndex","marginBottom","placeholder","startIcon","justifyContent","textTransform","fullWidth","value","target","anchor","open","onClose","overflowY","secondary","onSubmit","_c3","$RefreshReg$"],"sources":["/run/media/crimxnhaze/new/CODE/DBMS-project/frontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { ThemeProvider, createTheme, styled } from '@mui/material/styles';\nimport { CssBaseline, AppBar, Toolbar, Typography, Button, Card, CardContent, TextField, Paper, IconButton, Drawer, List, ListItem, ListItemText, Switch } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport io from 'socket.io-client';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1a1a1a' : theme.palette.background.paper,\n}));\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#2a2a2a' : theme.palette.background.default,\n}));\n\nconst socket = io('http://localhost:8000');\n\nfunction Board() {\n  const [darkMode, setDarkMode] = useState(false);\n  const theme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light',\n      background: {\n        default: darkMode ? '#000' : '#f5f5f5',\n        paper: darkMode ? '#1a1a1a' : '#fff',\n      },\n    },\n  });\n\n  const [lists, setLists] = useState([]);\n  const [newListTitle, setNewListTitle] = useState('');\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  useEffect(() => {\n    fetchBoardData();\n\n    socket.on('updateBoard', (updatedLists) => {\n      setLists(updatedLists);\n    });\n\n    socket.on('newChatMessage', (message) => {\n      setChatMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    return () => {\n      socket.off('updateBoard');\n      socket.off('newChatMessage');\n    };\n  }, []);\n\n  const fetchBoardData = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/board');\n      if (response.ok) {\n        const data = await response.json();\n        setLists(data.lists);\n      }\n    } catch (error) {\n      console.error('Error fetching board data:', error);\n    }\n  };\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    const updatedLists = [...lists];\n\n    if (result.type === 'LIST') {\n      const [movedList] = updatedLists.splice(source.index, 1);\n      updatedLists.splice(destination.index, 0, movedList);\n    } else {\n      const sourceList = updatedLists.find(list => list.list_id.toString() === source.droppableId);\n      const destList = updatedLists.find(list => list.list_id.toString() === destination.droppableId);\n      const [movedCard] = sourceList.cards.splice(source.index, 1);\n      destList.cards.splice(destination.index, 0, movedCard);\n    }\n\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n\n  const updateBackend = async (updatedLists) => {\n    try {\n      await fetch('http://localhost:8000/api/board/update', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ lists: updatedLists }),\n      });\n      socket.emit('updateBoard', updatedLists);\n    } catch (error) {\n      console.error('Error updating board:', error);\n    }\n  };\n\n  const addList = () => {\n    if (newListTitle.trim()) {\n      const newList = {\n        list_id: Date.now(),\n        title: newListTitle,\n        cards: [],\n      };\n      setLists([...lists, newList]);\n      setNewListTitle('');\n      updateBackend([...lists, newList]);\n    }\n  };\n\n  const addCard = (listId) => {\n    const newCardTitle = prompt('Enter card title:');\n    if (newCardTitle && newCardTitle.trim()) {\n      const updatedLists = lists.map(list => {\n        if (list.list_id === listId) {\n          return {\n            ...list,\n            cards: [...list.cards, { card_id: Date.now(), title: newCardTitle }],\n          };\n        }\n        return list;\n      });\n      setLists(updatedLists);\n      updateBackend(updatedLists);\n    }\n  };\n\n  const deleteList = (listId) => {\n    const updatedLists = lists.filter(list => list.list_id !== listId);\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n\n  const deleteCard = (listId, cardId) => {\n    const updatedLists = lists.map(list => {\n      if (list.list_id === listId) {\n        return {\n          ...list,\n          cards: list.cards.filter(card => card.card_id !== cardId),\n        };\n      }\n      return list;\n    });\n    setLists(updatedLists);\n    updateBackend(updatedLists);\n  };\n\n  const sendChatMessage = (e) => {\n    e.preventDefault();\n    if (newMessage.trim()) {\n      const message = { id: Date.now(), text: newMessage, user: 'User' };\n      setChatMessages([...chatMessages, message]);\n      setNewMessage('');\n      socket.emit('newChatMessage', message);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div style={{ display: 'flex', flexDirection: 'column', height: '100vh', backgroundColor: theme.palette.background.default }}>\n        <AppBar position=\"static\" sx={{ backgroundColor: theme.palette.mode === 'dark' ? '#000' : theme.palette.primary.main }}>\n          <Toolbar>\n            <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>Project Alpha</Typography>\n            <Typography variant=\"subtitle1\" sx={{ marginRight: 2 }}>John Doe</Typography>\n            <Switch\n              checked={darkMode}\n              onChange={() => setDarkMode(!darkMode)}\n              color=\"default\"\n            />\n            <IconButton color=\"inherit\" onClick={() => setIsChatOpen(!isChatOpen)}>\n              <ChatIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"board\" type=\"LIST\" direction=\"horizontal\">\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                style={{ display: 'flex', overflowX: 'auto', padding: theme.spacing(3), flexGrow: 1 }}\n              >\n                {lists.map((list, listIndex) => (\n                  <Draggable key={list.list_id} draggableId={list.list_id.toString()} index={listIndex}>\n                    {(provided) => (\n                      <StyledPaper\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        sx={{ width: 280, marginRight: 2, padding: 1, height: 'fit-content' }}\n                      >\n                        <Typography variant=\"h6\">\n                          {list.title}\n                          <IconButton size=\"small\" onClick={() => deleteList(list.list_id)}>\n                            <DeleteIcon />\n                          </IconButton>\n                        </Typography>\n                        <Droppable droppableId={list.list_id.toString()} type=\"CARD\">\n                          {(provided, snapshot) => (\n                            <div \n                              {...provided.droppableProps} \n                              ref={provided.innerRef}\n                              style={{\n                                minHeight: '50px', // Ensure there's always space to drop\n                                backgroundColor: snapshot.isDraggingOver ? theme.palette.action.hover : 'transparent',\n                                transition: 'background-color 0.2s ease',\n                                padding: theme.spacing(1, 0)\n                              }}\n                            >\n                              {list.cards.map((card, cardIndex) => (\n                                <Draggable key={card.card_id} draggableId={card.card_id.toString()} index={cardIndex}>\n                                  {(provided) => (\n                                    <StyledCard\n                                      ref={provided.innerRef}\n                                      {...provided.draggableProps}\n                                      {...provided.dragHandleProps}\n                                      sx={{ marginBottom: 1 }}\n                                    >\n                                      <CardContent>\n                                        <Typography>\n                                          {card.title}\n                                          <IconButton size=\"small\" onClick={() => deleteCard(list.list_id, card.card_id)}>\n                                            <DeleteIcon />\n                                          </IconButton>\n                                        </Typography>\n                                      </CardContent>\n                                    </StyledCard>\n                                  )}\n                                </Draggable>\n                              ))}\n                              {provided.placeholder}\n                            </div>\n                          )}\n                        </Droppable>\n                        <Button\n                          startIcon={<AddIcon />}\n                          onClick={() => addCard(list.list_id)}\n                          sx={{ width: '100%', justifyContent: 'flex-start', textTransform: 'none' }}\n                        >\n                          Add Card\n                        </Button>\n                      </StyledPaper>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n                <StyledPaper sx={{ width: 280, padding: 1 }}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    placeholder=\"Enter list title...\"\n                    value={newListTitle}\n                    onChange={(e) => setNewListTitle(e.target.value)}\n                    sx={{ marginBottom: 1 }}\n                  />\n                  <Button\n                    startIcon={<AddIcon />}\n                    onClick={addList}\n                    sx={{ width: '100%', justifyContent: 'flex-start', textTransform: 'none' }}\n                  >\n                    Add List\n                  </Button>\n                </StyledPaper>\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <Drawer anchor=\"right\" open={isChatOpen} onClose={() => setIsChatOpen(false)}>\n          <div style={{ width: 300, height: '100%', display: 'flex', flexDirection: 'column' }}>\n            <List sx={{ flexGrow: 1, overflowY: 'auto' }}>\n              {chatMessages.map((message) => (\n                <ListItem key={message.id}>\n                  <ListItemText primary={message.user} secondary={message.text} />\n                </ListItem>\n              ))}\n            </List>\n            <form onSubmit={sendChatMessage} style={{ padding: theme.spacing(2) }}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"Type a message...\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                sx={{ marginBottom: 1 }}\n              />\n              <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n                Send\n              </Button>\n            </form>\n          </div>\n        </Drawer>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}